<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\DryBox_V22.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\DryBox_V22.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Fri Mar 29 16:58:57 2024
<BR><P>
<H3>Maximum Stack Usage =        132 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Menu_Selection &rArr; WriteOneData &rArr; Write_Data_L &rArr; gpio_bit_write
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC_CMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC_CMP_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[e]">DMA_Channel0_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[f]">DMA_Channel1_2_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[10]">DMA_Channel3_4_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from gd32e23x_it.o(.text.EXTI0_1_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from encode.o(.text.EXTI2_3_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[9]">FMC_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32e23x_it.o(.text.HardFault_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[20]">I2C0_ER_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1a]">I2C0_EV_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[21]">I2C1_ER_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1b]">I2C1_EV_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[7]">LVD_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32e23x_it.o(.text.NMI_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from gd32e23x_it.o(.text.PendSV_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[a]">RCU_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1c]">SPI0_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1d]">SPI1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from gd32e23x_it.o(.text.SVC_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from gd32e23x_it.o(.text.SysTick_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_gd32e23x.o(.text.SystemInit) referenced from startup_gd32e23x.o(.text)
 <LI><a href="#[12]">TIMER0_BRK_UP_TRG_COM_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[13]">TIMER0_Channel_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[16]">TIMER13_IRQHandler</a> from heater.o(.text.TIMER13_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[17]">TIMER14_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[18]">TIMER15_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[19]">TIMER16_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[14]">TIMER2_IRQHandler</a> from count_down.o(.text.TIMER2_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[15]">TIMER5_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1e]">USART0_IRQHandler</a> from uart_debug.o(.text.USART0_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1f]">USART1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[6]">WWDGT_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[24]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32e23x.o(.text)
 <LI><a href="#[22]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[25]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[83]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[84]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[85]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[86]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[87]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER0_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_realise
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_realise
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_realise
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_realise
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_realise
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER13_IRQHandler
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_realise
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER13_IRQHandler
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER13_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_realise
</UL>

<P><STRONG><a name="[88]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[28]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[26]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[89]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>ADC_DMAConfig</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, temperature.o(.text.ADC_DMAConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ADC_DMAConfig &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_to_memory_disable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_enable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>ADC_TO_TEMP</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, temperature.o(.text.ADC_TO_TEMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_TO_TEMP
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hmd_calculate
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Hum_To_LCD
</UL>

<P><STRONG><a name="[36]"></a>ENCODE_LOOP</STRONG> (Thumb, 424 bytes, Stack size 24 bytes, encode.o(.text.ENCODE_LOOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ENCODE_LOOP &rArr; WriteOneData &rArr; Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOneData
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAllData
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
</UL>

<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gd32e23x_it.o(.text.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI0_1_IRQHandler &rArr; exti_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_led_toggle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, encode.o(.text.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EXTI2_3_IRQHandler &rArr; ENCODE_LOOP &rArr; WriteOneData &rArr; Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCODE_LOOP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>Hmd_calculate</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, temperature.o(.text.Hmd_calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Hmd_calculate &rArr; Read_humidity &rArr; delay_1ms &rArr; delay_10us
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_temperature
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_humidity
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TO_TEMP
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Hum_To_LCD
</UL>

<P><STRONG><a name="[41]"></a>Menu_Selection</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, encode.o(.text.Menu_Selection))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Menu_Selection &rArr; WriteOneData &rArr; Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOneData
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAllData
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_NumShow
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>Read_humidity</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, temperature.o(.text.Read_humidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Read_humidity &rArr; delay_1ms &rArr; delay_10us
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_get
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_10us
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hmd_calculate
</UL>

<P><STRONG><a name="[3f]"></a>Read_temperature</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, temperature.o(.text.Read_temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Read_temperature &rArr; dma_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_get
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hmd_calculate
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Hum_To_LCD
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32e23x_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, system_gd32e23x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemInit &rArr; system_clock_config &rArr; system_clock_72m_irc8m
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(.text)
</UL>
<P><STRONG><a name="[16]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, heater.o(.text.TIMER13_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = TIMER13_IRQHandler &rArr; pid_realise &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_realise
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 800 bytes, Stack size 32 bytes, count_down.o(.text.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TIMER2_IRQHandler &rArr; WriteOneData &rArr; Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOneData
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAllData
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_NumShow
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TM1621_init</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, show_lcd.o(.text.TM1621_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TM1621_init &rArr; WriteOneData &rArr; Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOneData
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAllData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>Temp_Hum_To_LCD</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, temperature.o(.text.Temp_Hum_To_LCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Temp_Hum_To_LCD &rArr; Hmd_calculate &rArr; Read_humidity &rArr; delay_1ms &rArr; delay_10us
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_temperature
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hmd_calculate
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TO_TEMP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>Time2_Init</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, count_down.o(.text.Time2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Time2_Init &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>Time_NumShow</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, count_down.o(.text.Time_NumShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Time_NumShow
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Selection
</UL>

<P><STRONG><a name="[5b]"></a>Timer13_Init</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, heater.o(.text.Timer13_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Timer13_Init &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>USART0_IRQHandler</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, uart_debug.o(.text.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART0_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_disable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>WriteAllData</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, show_lcd.o(.text.WriteAllData))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = WriteAllData &rArr; Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_L
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_H
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCODE_LOOP
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1621_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Selection
</UL>

<P><STRONG><a name="[52]"></a>WriteCmd</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, show_lcd.o(.text.WriteCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = WriteCmd &rArr; Write_Data_H &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_H
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1621_init
</UL>

<P><STRONG><a name="[39]"></a>WriteOneData</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, show_lcd.o(.text.WriteOneData))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = WriteOneData &rArr; Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_L
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_H
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCODE_LOOP
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1621_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Selection
</UL>

<P><STRONG><a name="[60]"></a>Write_Data_H</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, show_lcd.o(.text.Write_Data_H))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Write_Data_H &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOneData
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAllData
</UL>

<P><STRONG><a name="[61]"></a>Write_Data_L</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, show_lcd.o(.text.Write_Data_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOneData
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAllData
</UL>

<P><STRONG><a name="[6b]"></a>adc_calibration_enable</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_calibration_enable))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[67]"></a>adc_channel_length_config</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, gd32e23x_adc.o(.text.adc_channel_length_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_channel_length_config
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[62]"></a>adc_config</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, temperature.o(.text.adc_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = adc_config &rArr; adc_regular_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_resolution_config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_regular_channel_config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_source_config
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_mode_enable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_adc_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>adc_data_alignment_config</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, gd32e23x_adc.o(.text.adc_data_alignment_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_data_alignment_config
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[6c]"></a>adc_dma_mode_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_dma_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[6a]"></a>adc_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[69]"></a>adc_external_trigger_source_config</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, gd32e23x_adc.o(.text.adc_external_trigger_source_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_external_trigger_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[6d]"></a>adc_pin_config</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, temperature.o(.text.adc_pin_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = adc_pin_config &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[68]"></a>adc_regular_channel_config</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, gd32e23x_adc.o(.text.adc_regular_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = adc_regular_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[66]"></a>adc_resolution_config</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32e23x_adc.o(.text.adc_resolution_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_resolution_config
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[46]"></a>adc_software_trigger_enable</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, gd32e23x_adc.o(.text.adc_software_trigger_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_software_trigger_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_temperature
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_humidity
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[64]"></a>adc_special_function_config</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, gd32e23x_adc.o(.text.adc_special_function_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_special_function_config
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[70]"></a>com_gpio_init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, uart_debug.o(.text.com_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = com_gpio_init &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[45]"></a>delay_10us</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, systick.o(.text.delay_10us))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_humidity
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>

<P><STRONG><a name="[42]"></a>delay_1ms</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, systick.o(.text.delay_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = delay_1ms &rArr; delay_10us
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_humidity
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1621_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Selection
</UL>

<P><STRONG><a name="[4a]"></a>delay_decrement</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, systick.o(.text.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[72]"></a>dma_channel_disable</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32e23x_dma.o(.text.dma_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
</UL>

<P><STRONG><a name="[35]"></a>dma_channel_enable</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32e23x_dma.o(.text.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConfig
</UL>

<P><STRONG><a name="[33]"></a>dma_circulation_enable</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32e23x_dma.o(.text.dma_circulation_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_circulation_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConfig
</UL>

<P><STRONG><a name="[31]"></a>dma_deinit</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, gd32e23x_dma.o(.text.dma_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dma_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConfig
</UL>

<P><STRONG><a name="[47]"></a>dma_flag_get</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, gd32e23x_dma.o(.text.dma_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_temperature
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_humidity
</UL>

<P><STRONG><a name="[32]"></a>dma_init</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, gd32e23x_dma.o(.text.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConfig
</UL>

<P><STRONG><a name="[34]"></a>dma_memory_to_memory_disable</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, gd32e23x_dma.o(.text.dma_memory_to_memory_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_memory_to_memory_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConfig
</UL>

<P><STRONG><a name="[73]"></a>encode_pin_config</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, encode.o(.text.encode_pin_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = encode_pin_config &rArr; nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[75]"></a>exti_init</STRONG> (Thumb, 208 bytes, Stack size 20 bytes, gd32e23x_exti.o(.text.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_pin_config
</UL>

<P><STRONG><a name="[3c]"></a>exti_interrupt_flag_clear</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gd32e23x_exti.o(.text.exti_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = exti_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_pin_config
</UL>

<P><STRONG><a name="[3a]"></a>exti_interrupt_flag_get</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32e23x_exti.o(.text.exti_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = exti_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[3b]"></a>gd_eval_led_toggle</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32e230f_start.o(.text.gd_eval_led_toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gd_eval_led_toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[71]"></a>gpio_af_set</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, gd32e23x_gpio.o(.text.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_gpio_init
</UL>

<P><STRONG><a name="[44]"></a>gpio_bit_write</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gd32e23x_gpio.o(.text.gpio_bit_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_bit_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_humidity
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_L
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data_H
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER13_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOneData
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAllData
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Hum_To_LCD
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1621_init
</UL>

<P><STRONG><a name="[76]"></a>gpio_config</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, main.o(.text.gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gpio_config &rArr; lcd_pin_config &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_pin_config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_pin_config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_gpio_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_config
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>gpio_input_bit_get</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gd32e23x_gpio.o(.text.gpio_input_bit_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCODE_LOOP
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_pin_config
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Selection
</UL>

<P><STRONG><a name="[6e]"></a>gpio_mode_set</STRONG> (Thumb, 142 bytes, Stack size 28 bytes, gd32e23x_gpio.o(.text.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_pin_config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_gpio_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_config
</UL>

<P><STRONG><a name="[6f]"></a>gpio_output_options_set</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gd32e23x_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_pin_config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_gpio_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_config
</UL>

<P><STRONG><a name="[77]"></a>lcd_pin_config</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, show_lcd.o(.text.lcd_pin_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_pin_config &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[22]"></a>main</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = main &rArr; Menu_Selection &rArr; WriteOneData &rArr; Write_Data_L &rArr; gpio_bit_write
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer13_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time2_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Hum_To_LCD
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1621_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Selection
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[58]"></a>nvic_irq_enable</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gd32e23x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_pin_config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer13_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time2_Init
</UL>

<P><STRONG><a name="[4c]"></a>nvic_vector_table_set</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gd32e23x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nvic_vector_table_set
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[79]"></a>pid_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, heater.o(.text.pid_init))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>pid_realise</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, heater.o(.text.pid_realise))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = pid_realise &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER13_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>rcu_adc_clock_config</STRONG> (Thumb, 384 bytes, Stack size 8 bytes, gd32e23x_rcu.o(.text.rcu_adc_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rcu_adc_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[30]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, gd32e23x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_pin_config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_pin_config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_gpio_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_config
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer13_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time2_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConfig
</UL>

<P><STRONG><a name="[81]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, gd32e23x_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[80]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, gd32e23x_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[74]"></a>syscfg_exti_line_config</STRONG> (Thumb, 164 bytes, Stack size 20 bytes, gd32e23x_syscfg.o(.text.syscfg_exti_line_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = syscfg_exti_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_pin_config
</UL>

<P><STRONG><a name="[78]"></a>systick_config</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, systick.o(.text.systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = systick_config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e23x_timer.o(.text.timer_auto_reload_shadow_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer13_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time2_Init
</UL>

<P><STRONG><a name="[55]"></a>timer_deinit</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, gd32e23x_timer.o(.text.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer13_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time2_Init
</UL>

<P><STRONG><a name="[5a]"></a>timer_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e23x_timer.o(.text.timer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer13_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time2_Init
</UL>

<P><STRONG><a name="[56]"></a>timer_init</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer13_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time2_Init
</UL>

<P><STRONG><a name="[59]"></a>timer_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer13_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time2_Init
</UL>

<P><STRONG><a name="[50]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER13_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gd32e23x_timer.o(.text.timer_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER13_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>usart_data_receive</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gd32e23x_usart.o(.text.usart_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>usart_data_transmit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32e23x_usart.o(.text.usart_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[5f]"></a>usart_interrupt_disable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32e23x_usart.o(.text.usart_interrupt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[5c]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 98 bytes, Stack size 28 bytes, gd32e23x_usart.o(.text.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7f]"></a>system_clock_72m_irc8m</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, system_gd32e23x.o(.text.system_clock_72m_irc8m))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = system_clock_72m_irc8m
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[4b]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32e23x.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_clock_config &rArr; system_clock_72m_irc8m
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_72m_irc8m
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7b]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, gd32e23x_misc.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[7a]"></a>__NVIC_SetPriority</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gd32e23x_misc.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[48]"></a>SysTick_Config</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, systick.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[49]"></a>__NVIC_SetPriority</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, systick.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
